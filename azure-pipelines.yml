jobs:
- job: build_daint
  pool: CSCS
  strategy:
    matrix:
      pgi_default_gpu:
        compiler_env: PrgEnv-pgi
        compiler_module: pgi
        accel_module: craype-accel-nvidia60
        # Generic accelerator flag
        #   -acc is removed as it should be detected by the configure script
        FCFLAGS: "-O3 -Mallocatable=03 -gopt"
        ENABLE_GPU: acc
        LAUNCH_PREFIX: "srun -C gpu -A pr55 -p cscsci"
      cce-cpu-icon-production:
        compiler_env: PrgEnv-cray
        # See /project/d56/modules/cce-icon/11.0.0:
        compiler_module: cce/11.0.0
        accel_module:
        # Production flags for Icon model
        FCFLAGS: "-hadd_paren -r am -Ktrap=divz,ovf,inv -hflex_mp=intolerant -hfp1 -hnoacc -O1,cache0"
        ENABLE_GPU: no
      cce-openmp:
        compiler_env: PrgEnv-cray
        compiler_module: cce/11.0.0
        accel_module: craype-accel-nvidia60
        # OpenMP flags from Nichols Romero (Argonne)
        #   -homp is removed as it should be detected by the configure script
        #   (in fact, the configure script detects -fopenmp)
        FCFLAGS: "-hnoacc -O0"
        ENABLE_GPU: mp
        LAUNCH_PREFIX: "srun -C gpu -A pr55 -p cscsci"
    maxParallel: 2

  workspace:
    clean: all

  steps:
  - script: |
      set -e

      module load cray-python
      python -m venv python
      python/bin/pip install --upgrade pip
      python/bin/pip install netCDF4 xarray dask[array]

      echo "
      module load daint-gpu
      export PATH=\"\$CRAY_BINUTILS_BIN:\$PATH\"
      if \${PE_ENV:+:} false; then
        module swap PrgEnv-\$(echo \"\$PE_ENV\" | tr '[:upper:]' '[:lower:]') $(compiler_env)
      else
        module load $(compiler_env)
      fi
      module swap \${COMPILER_MODULE%/*} $(compiler_module)
      module load $(accel_module)
      module load cray-netcdf cray-hdf5
      export LD_LIBRARY_PATH=\"\$CRAY_LD_LIBRARY_PATH:\$LD_LIBRARY_PATH\"
      export CUDA_HOME=\$CUDATOOLKIT_HOME

      export PYTHON=$(pwd)/python/bin/python
      export FC=ftn

      echo Compiler Environment:
      module list
      echo LD_LIBRARY_PATH is:
      echo \$LD_LIBRARY_PATH
      " > compiler_modules

    displayName: 'Create module environment'
  - script: |
      set -e
      source compiler_modules
      ./configure --enable-tests --disable-silent-rules --enable-gpu=$ENABLE_GPU || { cat ./config.log; false; }
      cat ./config.log
    displayName: 'Configure'
  - script: |
      set -e
      source compiler_modules
      make -j8
    displayName: 'Make'
  - script: |
      set -e
      source compiler_modules
      make -j8 check
    displayName: 'Check'
